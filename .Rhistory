"factor_infraestructura",
"factor_finaciamiento",
"factor_seguridad",
"factor_control",
"factor_adecuado",
"factor_desleal",
"factor_corrupcion",
"as_gremio",
"as_barrio",
"as_proyectos",
"as_gobregion",
"as_corfo",
"as_otro",
"as_no",
"as_nosabe", "FE_TRANSVERSAL" ))
datos_proyecto <- bbdd %>%
select(all_of(unlist(variables))) |>
mutate(emp_nacional=as.numeric(emp_nacional))
###llamo a la funcion para hacer la tabla
source("ftabla_resumen.R")
vars<-list(c("CIIU_FINAL", "TAMANO","gg_edad", "gg_sexo_h", "gg_sexo_m", "part_grupo_no", "part_grupo_si",
"no_directorio", "si_directorio", "no_contratacion", "si_contratacion",
"no_fin_contrato", "si_fin_contrato", "año",
"comp_1", "comp_2", "comp_3", "comp_4", "comp_5",
"emp_nacional", "emp_extranjera", "emp_estatal", "total_ocupado_m",
"total_ocupado_h", "n_directorio_h",
"n_directorio_m",
"sin_directorio_h",
"sin_directorio_m"))
diccionario <- tibble::tibble(
variable = c("CIIU_FINAL", "TAMANO","gg_edad", "gg_sexo_h", "gg_sexo_m", "part_grupo_no", "part_grupo_si",
"no_directorio", "si_directorio", "no_contratacion", "si_contratacion",
"no_fin_contrato", "si_fin_contrato", "año",
"comp_1", "comp_2", "comp_3", "comp_4", "comp_5",
"emp_nacional", "emp_extranjera", "emp_estatal","total_ocupado_m",
"total_ocupado_h","n_directorio_h",
"n_directorio_m",
"sin_directorio_h",
"sin_directorio_m"),
Nombre = c(
"Clasificador Internacional Industrial Uniforme (CIIU)",
"Tamaño de la empresa",
"Edad gerente general",
"Sexo Gerente General = Hombre",
"Sexo Gerente General = Mujer",
"Empresa no es parte de un grupo",
"Empresa si es parte de un grupo",
"No tiene directorio",
"Si tiene directorio",
"No tuvo nuevas contrataciones",
"Si tuvo nuevas contrataciones",
"No finalizó contrataciones",
"Si finalizó contrataciones",
"Año de fundación",
'Cantidad de competencia = "1 Baja"',
'Cantidad de competencia = "2"',
'Cantidad de competencia = "3"',
'Cantidad de competencia = "4"',
'Cantidad de competencia = "5 Elevada"',
"Porcentaje de propiedad nacional",
"Porcentaje de propiedad extranjera",
"Porcentaje de propiedad estatal",
"Total de mujeres ocupadas en la empresa",
"Total de hombres ocupados en la empresa",
"Número de directores",
"Numero de directoras",
"Empresa sin directores",
"Empresa sin directoras"
)
)
na_summary_todas <- get_na_table(datos_proyecto, variables)
na_summary_actual <- get_na_table(datos_proyecto, vars)
print(na_summary_actual)
names(na_summary_actual)=c("Variable", "Valores Perdidos (NA)", "Valor Mínimo", "Valor Máximo", "Media", "Mediana", "Moda", "N","%NA", "N Válido" )
na_summary_actual=na_summary_actual |>
full_join(diccionario, by=c("Variable"="variable")) |>
select("Nombre", "N", "N Válido", "Valores Perdidos (NA)", "%NA", "Valor Mínimo", "Valor Máximo", "Media", "Mediana", "Moda")
print(na_summary_actual)
####CATEGORIZACION VARIABLES####
##### 1. TAMAÑO#####
datos_proyecto <- datos_proyecto %>%
mutate(TAMANO = case_when(
TAMANO == 1 ~ "Grande",
TAMANO == 2 ~ "Mediana",
TAMANO == 3 ~ "Pequeña 2",
TAMANO == 4 ~ "Pequeña 1",
TAMANO == 5 ~ "Micro",
TRUE ~ as.character(TAMANO)
))
table(datos_proyecto$TAMANO)
datos_proyecto <- datos_proyecto %>%
mutate(
# Detectar inconsistencias/ NA
inconsistencia = case_when(
gg_sexo_h == 1 & gg_sexo_m == 1 ~ TRUE,
gg_sexo_h == 0 & gg_sexo_m == 0 ~ TRUE,
is.na(gg_sexo_h) | is.na(gg_sexo_m) ~ TRUE,
TRUE ~ FALSE
),
# Crear la variable unificada
gg_sexo = case_when(
gg_sexo_h == 1 & gg_sexo_m == 0 ~ "Hombre",
gg_sexo_h == 0 & gg_sexo_m == 1 ~ "Mujer",
TRUE ~ NA_character_  # Para casos inconsistentes o NA
)
)
table(datos_proyecto$gg_sexo)
#####3. PARTE DE UN GRUPO#####
datos_proyecto <- datos_proyecto %>%
mutate(
# Detectar inconsistencias/ NA
inconsistencia = case_when(
part_grupo_no == 1 & part_grupo_si == 1 ~ TRUE,
part_grupo_no == 0 & part_grupo_si == 0 ~ TRUE,
is.na(part_grupo_no) | is.na(part_grupo_no) ~ TRUE,
TRUE ~ FALSE
),
# Crear la variable unificada
part_grupo = case_when(
part_grupo_no == 1 & part_grupo_si == 0 ~ "No",
part_grupo_no == 0 & part_grupo_si == 1 ~ "Si",
TRUE ~ NA_character_  # Para casos inconsistentes o NA
)
)
table(datos_proyecto$part_grupo)
#####4. DIRECTORIO#####
datos_proyecto <- datos_proyecto %>%
mutate(
# Detectar inconsistencias/ NA
inconsistencia = case_when(
no_directorio == 1 & si_directorio == 1 ~ TRUE,
no_directorio == 0 & si_directorio == 0 ~ TRUE,
is.na(no_directorio) | is.na(si_directorio) ~ TRUE,
TRUE ~ FALSE
),
# Crear la variable unificada
directorio = case_when(
no_directorio == 1 & si_directorio == 0 ~ "No",
no_directorio == 0 & si_directorio == 1 ~ "Si",
TRUE ~ NA_character_  # Para casos inconsistentes o NA
)
)
table(datos_proyecto$directorio)
#####5. CONTRATACION#####
datos_proyecto <- datos_proyecto %>%
mutate(
# Detectar inconsistencias/ NA
inconsistencia = case_when(
no_contratacion == 1 & si_contratacion == 1 ~ TRUE,
no_contratacion == 0 & si_contratacion == 0 ~ TRUE,
is.na(no_contratacion) | is.na(si_contratacion) ~ TRUE,
TRUE ~ FALSE
),
# Crear la variable unificada
contratacion = case_when(
no_contratacion == 1 & si_contratacion == 0 ~ "No",
no_contratacion == 0 & si_contratacion == 1 ~ "Si",
TRUE ~ NA_character_  # Para casos inconsistentes o NA
)
)
table(datos_proyecto$contratacion)
#####6. FIN DE CONTRATO#####
datos_proyecto <- datos_proyecto %>%
mutate(
# Detectar inconsistencias/ NA
inconsistencia = case_when(
no_fin_contrato == 1 & si_fin_contrato == 1 ~ TRUE,
no_fin_contrato == 0 & si_fin_contrato == 0 ~ TRUE,
is.na(no_fin_contrato) | is.na(si_fin_contrato) ~ TRUE,
TRUE ~ FALSE
),
# Crear la variable unificada
fin_contrato = case_when(
no_fin_contrato == 1 & si_fin_contrato == 0 ~ "No",
no_fin_contrato == 0 & si_fin_contrato == 1 ~ "Si",
TRUE ~ NA_character_  # Para casos inconsistentes o NA
)
)
table(datos_proyecto$fin_contrato)
#####7. ANTIGUEDAD####
datos_proyecto <- datos_proyecto %>%
mutate(ANTIGUEDAD = abs(2022 - año))
#####8. NIVEL DE COMPETENCIA####
datos_proyecto <- datos_proyecto %>%
mutate(
nivel_competencia = case_when(
comp_1 == 1 ~ "1",
comp_2 == 1 ~ "2",
comp_3 == 1 ~ "3",
comp_4 == 1 ~ "4",
comp_5 == 1 ~ "5",
TRUE ~ NA_character_  # Para casos donde ninguna tiene 1
)
)
datos_proyecto <- datos_proyecto %>%
mutate(
suma_comp = comp_1 + comp_2 + comp_3 + comp_4 + comp_5,
nivel_competencia = case_when(
suma_comp == 1 & comp_1 == 1 ~ "1",
suma_comp == 1 & comp_2 == 1 ~ "2",
suma_comp == 1 & comp_3 == 1 ~ "3",
suma_comp == 1 & comp_4 == 1 ~ "4",
suma_comp == 1 & comp_5 == 1 ~ "5",
suma_comp > 1 ~ "Error: múltiples competencias",
TRUE ~ NA_character_
)
)
table(datos_proyecto$nivel_competencia)
#####9. PREDOMINIO TIPO DE EMPRESA####
datos_proyecto <- datos_proyecto %>%
rowwise() %>%
mutate(
max_val = max(c(emp_nacional, emp_extranjera, emp_estatal), na.rm = TRUE),
emp_tipo = case_when(
sum(c(emp_nacional, emp_extranjera, emp_estatal) == max_val, na.rm = TRUE) > 1 ~ "empate",
emp_nacional == max_val ~ "nacional",
emp_extranjera == max_val ~ "extranjera",
emp_estatal == max_val ~ "estatal",
TRUE ~ NA_character_
)
) %>%
ungroup()
table(datos_proyecto$emp_tipo)
datos_proyecto<-datos_proyecto |>
mutate(
pct_directoras=n_directorio_h/(n_directorio_h+n_directorio_m)
)
table(datos_proyecto$pct_directoras)
nuevas_vars<-list(c("TAMANO",
"gg_sexo",
"part_grupo",
"directorio",
"contratacion",
"fin_contrato",
"ANTIGUEDAD",
"nivel_competencia",
"emp_tipo",
"pct_directoras"))
diccionario<- tibble::tibble(
variable = c("TAMANO",
"gg_sexo",
"part_grupo",
"directorio",
"contratacion",
"fin_contrato",
"ANTIGUEDAD",
"nivel_competencia",
"emp_tipo"),
Nombre = c("Tamaño de la empresa", "Sexo Gerente/a General",
"Participación en grupo de empresas", "Directorio",
"Nuevas Contrataciones en el período", "Finalización de contrataciones en el período",
"Antiguedad de la empresa (en años)", "Evaluación del nivel de competencia",
"Tipo de empresa", "Porcentaje de Directoras"))
diccionario<- tibble::tibble(
variable = c("TAMANO",
"gg_sexo",
"part_grupo",
"directorio",
"contratacion",
"fin_contrato",
"ANTIGUEDAD",
"nivel_competencia",
"emp_tipo",
"pct_directoras"),
Nombre = c("Tamaño de la empresa", "Sexo Gerente/a General",
"Participación en grupo de empresas", "Directorio",
"Nuevas Contrataciones en el período", "Finalización de contrataciones en el período",
"Antiguedad de la empresa (en años)", "Evaluación del nivel de competencia",
"Tipo de empresa", "Porcentaje de Directoras"))
nuevas_na_summary<-get_na_table(datos_proyecto, nuevas_vars)
print(nuevas_na_summary)
names(nuevas_na_summary)=c("Variable", "Valores Perdidos (NA)", "Valor Mínimo", "Valor Máximo", "Media", "Mediana", "Moda", "N","%NA", "N Válido" )
nuevas_na_summary=nuevas_na_summary |>
full_join(diccionario, by=c("Variable"="variable")) |>
select("Nombre", "N", "N Válido", "Valores Perdidos (NA)", "%NA", "Valor Mínimo", "Valor Máximo", "Media", "Mediana", "Moda")
print(nuevas_na_summary)
View(nuevas_na_summary)
tabla_ciiu_tamano <- datos_proyecto %>%
group_by(CIIU, TAMANO) %>%
summarise(
promedio_mujeres_dir = mean(porcentaje_mujeres_directorio, na.rm = TRUE),
n_empresas = n()
) %>%
ungroup()
tabla_ciiu_tamano <- datos_proyecto %>%
group_by(CIIU_FINAL, TAMANO) %>%
summarise(
promedio_mujeres_dir = mean(porcentaje_mujeres_directorio, na.rm = TRUE),
n_empresas = n()
) %>%
ungroup()
tabla_ciiu_tamano <- datos_proyecto %>%
group_by(CIIU_FINAL, TAMANO) %>%
summarise(
promedio_mujeres_dir = mean(pct_directoras, na.rm = TRUE),
n_empresas = n()
) %>%
ungroup()
View(tabla_ciiu_tamano)
tabla_ciiu_tamano <- datos_proyecto %>%
group_by(CIIU_FINAL, TAMANO) %>%
summarise(
promedio_mujeres_dir = mean(pct_directoras, na.rm = TRUE),
n_empresas = n()
) %>%
ungroup()
tabla_ciiu_tamano_ancha <- tabla_ciiu_tamano %>%
select(-n_empresas) %>%  # si no quieres mostrar N
pivot_wider(
names_from = TAMANO,
values_from = promedio_mujeres_dir
)
View(tabla_ciiu_tamano_ancha)
datos_proyecto<-datos_proyecto |>
mutate(
pct_directoras=n_directorio_m/(n_directorio_h+n_directorio_m)
)
table(datos_proyecto$pct_directoras)
nuevas_vars<-list(c("TAMANO",
"gg_sexo",
"part_grupo",
"directorio",
"contratacion",
"fin_contrato",
"ANTIGUEDAD",
"nivel_competencia",
"emp_tipo",
"pct_directoras"))
diccionario<- tibble::tibble(
variable = c("TAMANO",
"gg_sexo",
"part_grupo",
"directorio",
"contratacion",
"fin_contrato",
"ANTIGUEDAD",
"nivel_competencia",
"emp_tipo",
"pct_directoras"),
Nombre = c("Tamaño de la empresa", "Sexo Gerente/a General",
"Participación en grupo de empresas", "Directorio",
"Nuevas Contrataciones en el período", "Finalización de contrataciones en el período",
"Antiguedad de la empresa (en años)", "Evaluación del nivel de competencia",
"Tipo de empresa", "Porcentaje de Directoras"))
nuevas_na_summary<-get_na_table(datos_proyecto, nuevas_vars)
print(nuevas_na_summary)
names(nuevas_na_summary)=c("Variable", "Valores Perdidos (NA)", "Valor Mínimo", "Valor Máximo", "Media", "Mediana", "Moda", "N","%NA", "N Válido" )
nuevas_na_summary=nuevas_na_summary |>
full_join(diccionario, by=c("Variable"="variable")) |>
select("Nombre", "N", "N Válido", "Valores Perdidos (NA)", "%NA", "Valor Mínimo", "Valor Máximo", "Media", "Mediana", "Moda")
print(nuevas_na_summary)
tabla_ciiu_tamano <- datos_proyecto %>%
group_by(CIIU_FINAL, TAMANO) %>%
summarise(
promedio_mujeres_dir = mean(pct_directoras, na.rm = TRUE),
n_empresas = n()
) %>%
ungroup()
library(tidyr)
tabla_ciiu_tamano_ancha <- tabla_ciiu_tamano %>%
select(-n_empresas) %>%  # si no quieres mostrar N
pivot_wider(
names_from = TAMANO,
values_from = promedio_mujeres_dir
)
View(tabla_ciiu_tamano_ancha)
tabla_ciiu_tamano_ancha %>%
mutate(across(where(is.numeric), ~ percent(.x, accuracy = 0.1))) %>%
kable(caption = "Porcentaje promedio de mujeres en directorios según CIIU y tamaño de empresa") %>%
kable_styling(full_width = FALSE)
library(scales)
library(knitr)
library(kableExtra)
tabla_ciiu_tamano_ancha %>%
mutate(across(where(is.numeric), ~ percent(.x, accuracy = 0.1))) %>%
kable(caption = "Porcentaje promedio de mujeres en directorios según CIIU y tamaño de empresa") %>%
kable_styling(full_width = FALSE)
datos_proyecto %>%
count(emp_tipo) %>%
mutate(
porcentaje = round((n / sum(n)) * 100, 1)
) %>%
rename(Categoria = emp_tipo, Frecuencia = n)
##### 2. PROMEDIO ANTIGUEDAD #####
mean(datos_proyecto$ANTIGUEDAD)
##### 3. ACTIVIDAD ECONOMICA x TAMAÑO ####
actividad_tamaño <- addmargins(table(datos_proyecto$CIIU_FINAL,
datos_proyecto$TAMANO))
print(actividad_tamaño)
#Identificar que es cada código
bbdd %>%
group_by(CIIU_FINAL) %>%
summarise(glosa_unica = paste(unique(GLOSA_CIIU), collapse = ", "))
##### X. DISTRIBUCION HOMBRE VS MUJERES ####
#Dotación de mujeres reportadas
sum(datos_proyecto$total_ocupado_m, na.rm = T)
#% Mujeres > 3424827/9395874*100 > 36.5
#Dotacion de hombres reportadas
sum(datos_proyecto$total_ocupado_h, na.rm = T)
##### X. DISTRIBUCION SEXO X CIIU #####
library(ggplot2)
#1: Agrupar y resumir los datos
tabla_cruce <- datos_proyecto %>%
group_by(CIIU_FINAL) %>%
summarise(
total_ocupado_m = sum(total_ocupado_m, na.rm = TRUE),
total_ocupado_h = sum(total_ocupado_h, na.rm = TRUE)
) %>%
ungroup()
#2: Transformar a formato largo
tabla_larga <- tabla_cruce %>%
pivot_longer(cols = c(total_ocupado_m, total_ocupado_h),
names_to = "sexo",
values_to = "total") %>%
group_by(CIIU_FINAL) %>%
mutate(porcentaje = round(total / sum(total) * 100, 1)) %>%
ungroup()
#3: Etiquetas más amigables
tabla_larga$sexo <- recode(tabla_larga$sexo,
"total_ocupado_m" = "Mujeres",
"total_ocupado_h" = "Hombres")
#4: Crear el gráfico
ggplot(tabla_larga, aes(x = CIIU_FINAL, y = porcentaje, fill = sexo)) +
geom_bar(stat = "identity", position = "stack") +
geom_text(aes(label = paste0(porcentaje, "%")),
position = position_stack(vjust = 0.5),
color = "white", size = 3.5) +
scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 10)) +
scale_fill_manual(values = c("Mujeres" = "#996CA9", "Hombres" = "#56B4E9")) +  # Colores personalizados
labs(
title = "Distribución porcentual de mujeres y hombres por Actividad Económica",
x = "Actividad Económica",
y = "Porcentaje",
fill = "Sexo"
) +
theme_minimal()
##### X. DISTRIBUCION EDAD GG X GENERO #####
boxplot_gg_edad <- ggplot(subset(datos_proyecto, !is.na(gg_sexo)), aes(x = gg_sexo, y = gg_edad, fill = gg_sexo)) +
geom_boxplot(outlier.alpha = 0.3, width = 0.6) +
scale_fill_manual(values = c("#56B4E9", "#996CA9")) +
labs(
title = "Comparación de edad según sexo del Gerente General",
x = NULL,
y = "Edad",
fill = NULL
) +
theme_minimal() +
theme(legend.position = "none")
boxplot_gg_edad
#4: Crear el gráfico
g_gg_ciiu<-ggplot(tabla_larga, aes(x = CIIU_FINAL, y = porcentaje, fill = sexo)) +
geom_bar(stat = "identity", position = "stack") +
geom_text(aes(label = paste0(porcentaje, "%")),
position = position_stack(vjust = 0.5),
color = "white", size = 3.5) +
scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 10)) +
scale_fill_manual(values = c("Mujeres" = "#996CA9", "Hombres" = "#56B4E9")) +  # Colores personalizados
labs(
title = "Distribución porcentual de mujeres y hombres por Actividad Económica",
x = "Actividad Económica",
y = "Porcentaje",
fill = "Sexo"
) +
theme_minimal()
ggsave("grafico_1.png", g_gg_ciiu, width = 8, height = 6, dpi = 300)
ggsave("grafico_2.png", boxplot_gg_edad, width = 8, height = 6, dpi = 300)
g_remu_est<-ggplot(tabla_remu_sin_total, aes(x = estamento, y = promedio, fill = sexo)) +
geom_col(position = "dodge") +
#geom_text(aes(label = round(promedio, 0)),
#         position = position_dodge(width = 0.9),
#        vjust = -0.2, size = 3.5) +
scale_fill_manual(values = c("m" = "#996CA9", "h" = "#56B4E9"),
labels= c("m"="Mujer", "h"="Hombre")) + # Colores personalizados
labs(
title = "Remuneración promedio por estamento y sexo",
x = "Estamento",
y = "Remuneración promedio",
fill = "Sexo"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.text.x = element_text(angle = 25, hjust = 1)
)
print(g_remu_est)
ggsave("grafico3.png", g_remu_est, width = 8, height = 6, dpi = 300)
g_ocupado_est<-ggplot(tabla_ocupadas, aes(x = estamento, y =total , fill = sexo)) +
geom_col(position = "dodge") +
#geom_text(aes(label = round(promedio, 0)),
#         position = position_dodge(width = 0.9),
#        vjust = -0.2, size = 3.5) +
scale_fill_manual(values = c("m" = "#996CA9", "h" = "#56B4E9"),
labels= c("m"="Mujer", "h"="Hombre")) + # Colores personalizados
labs(
title = "Número de personas ocupadas en la empresa por estamento y sexo",
x = "Estamento",
y = "Número de personas ocupadas",
fill = "Sexo"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.text.x = element_text(angle = 25, hjust = 1)
)
print(g_ocupado_est)
ggsave("grafico_4.png", g_ocupado_est, width = 8, height = 6, dpi = 300)
View(tabla_ciiu_tamano_ancha)
write_xlsx(tabla_ciiu_tamano_ancha
path = "Porcentaje_mujeres.xlsx"
write_xlsx(tabla_ciiu_tamano_ancha,
path = "Porcentaje_mujeres.xlsx"
)
